@use 'sass:math';
@use './breakpoints' as bp;

$grid-columns: 12;
$justify-content: start, end, center, space-between, space-around;
$align-items: center, start, end, baseline, stretch;

// grid gaps
$grid-gaps: (
  '1': 0.5rem,
  '2': 1rem,
  '3': 2rem,
  '4': 4rem,
  '5': 8rem,
  '6': 16rem,
);

// grid gaps
@each $key, $value in $grid-gaps {
  .gap-#{$key} > * {
    padding: $value;
  }
  .gap-#{$key} {
    margin-left: -$value;
    margin-right: -$value;
  }
}

// justify content
@each $value in $justify-content {
  .justify-#{$value} {
    justify-content: $value;
  }
}

// align items
@each $value in $align-items {
  .align-#{$value} {
    align-items: $value;
  }
}

//  column classes
@include bp.xs {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include bp.sm {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include bp.md {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include bp.lg {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include bp.xl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include bp.xxl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-2xl {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include bp.xxxl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-3xl {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
